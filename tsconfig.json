{
  "compilerOptions": {
    "declaration": true,                         /* Generates corresponding '.d.ts' file. */
    "target": "ES6",                             /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    "lib": ["es6", "dom", "es2016", "es2017"],   /* Specify library files to be included in the compilation. */
    "allowJs": true,                             /* Allow javascript files to be compiled. */
    "jsx": "react",                              /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "sourceMap": false,                          /* Generates corresponding '.map' file. */
    "moduleResolution": "node",                  /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                     /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "downlevelIteration":true,                   /*  这个选项是为了在旧版 Javascript 运行时上更准确的实现现代 JavaScript 迭代器的概念。 */
    "importHelpers": true,                       /* 对于某些降级行为，TypeScript 使用一些辅助代码来进行操作。如果启用了 importHelpers 选项，这些辅助函数将从 tslib 中被导入。 */
    "strict": true,
    "noImplicitAny": true,
  }, 
  "include": ["src/**/*"],
  "exclude": ["node_modules", "examples/**/*.stories.(tsx | mdx)"]
}
